const ADD_USER = 'ADD_USER';

export const addUserAC = (user) => {
return{
    type: ADD_USER,
    user
}
}

export const UsersReducer = (state, action) =>{
    if(action.type === ADD_USER){
        return ({
            ...state,
            usersPage: [
                ...state.usersPage,
                {...action.user}
            ]
        })
    } else{
        return state
    }
}

// 1. Создается константа ADD_USER, которая используется
// для определения типа события добавления пользователя.
// 2. Создается action creator (addUserAC), который
//  возвращает объект с типом ADD_USER и переданным ему
//  пользователем.
// 3. Создается reducer (UsersReducer), который принимает
// состояние (state) и действие (action). Если тип
// действия равен ADD_USER, то функция возвращает новое
//  состояние, которое содержит все объекты из 
// предыдущего состояния и новый объект-пользователь, 
// который добавляется в массив usersPage. Для создания
//  нового состояния используется оператор расширения 
// объектов (...), который создает копию объекта, 
// а также оператор расширения массивов (...), который
//  создает копию массива и добавляет новый элемент в
//  конец.

// -----------------------------

/*
dispatch(addUserAC({id: 3, name: 'John'}))
*/ 